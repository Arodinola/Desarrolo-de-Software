
--REINICIAR CONTADOR IDENTITY--DBCC CHECKIDENT ('Productos', RESEED, 1)

-----------------------------------------------------------PROCEDIMIENTOS ALMACENADOS PARA PRODUCTOS--------------------------------------

--------------------------------------------------------------------------------BUSCAR POR NOMBRE---------------------------------------------------------
CREATE PROCEDURE ConsultaProductoPorNombre@NombreProducto Varchar(30)ASSET NOCOUNT ON;SELECT [IDProducto] 'Id', [NombreProducto]'Nombre', [Precio] 'Precio', [CantidadProducto] 'Cantidad', [FKIdLaboratorio] 'Id_Laboratorio', [FkIdProveedor] 'Id_Proveedor', [FKIdCategoria] 'Id_Categoria', [FKIdUsos] 'Id_Usos' From Productos PINNER JOIN CategoriaProducto CPON CP.IdCategoriaProducto = P.FKIdCategoriaINNER JOIN Usos UON U.PKIdUsos = P.FKIdUsosINNER JOIN Labororios LON L.IdLaboratorio = P.FKIdLaboratorioINNER JOIN Proveedores PRON PR.PKIdProveedor = P.FkIdProveedorWHERE NombreProducto LIKE CONCAT (@NombreProducto, '%%');EXEC ConsultaProductoPorNombre 'Pa'---------------------------------------------------------------BUSCAR POR ID-------------------------------------------------------------------ALTER PROCEDURE ConsultaProductoPorID@IDProducto IntASSET NOCOUNT ON;SELECT [IDProducto] 'Id', [NombreProducto]'Nombre', [Precio] 'Precio', [CantidadProducto] 'Cantidad', [FKIdLaboratorio] 'Id_Laboratorio', [FkIdProveedor] 'Id_Proveedor', [FKIdCategoria] 'Id_Categoria', [FKIdUsos] 'Id_Usos' From Productos PINNER JOIN CategoriaProducto CPON CP.IdCategoriaProducto = P.FKIdCategoriaINNER JOIN Usos UON U.PKIdUsos = P.FKIdUsosINNER JOIN Labororios LON L.IdLaboratorio = P.FKIdLaboratorioINNER JOIN Proveedores PRON PR.PKIdProveedor = P.FkIdProveedorWHERE IDProducto = @IDProductoEXEC ConsultaProductoPorID 1--BUSCAR SI NULLCREATE PROCEDURE ConsultaProductoVacioASSET NOCOUNT ON;SELECT [IDProducto] 'Id', [NombreProducto]'Nombre', [Precio] 'Precio', [CantidadProducto] 'Cantidad', [FKIdLaboratorio] 'Id_Laboratorio', [FkIdProveedor] 'Id_Proveedor', [FKIdCategoria] 'Id_Categoria', [FKIdUsos] 'Id_Usos' From Productos PINNER JOIN CategoriaProducto CPON CP.IdCategoriaProducto = P.FKIdCategoriaINNER JOIN Usos UON U.PKIdUsos = P.FKIdUsosINNER JOIN Labororios LON L.IdLaboratorio = P.FKIdLaboratorioINNER JOIN Proveedores PRON PR.PKIdProveedor = P.FkIdProveedorEXEC ConsultaProductoVacio--------------------------------------------------CRUD PARA PRODUCTOS -------------------------------------------------------------------------------------------------------INSERTAR------------------------------------------------------------CREATE PROCEDURE InsertarUnProducto@NombreProducto Nchar(30),@Precio float,@Cantidad Int,@EstadoProducto Int,@IdLaboratorio int,@IdProveedor Int,@IdCategoria Int,@IdUsos IntASSET NOCOUNT ON;BEGININSERT INTO Productos VALUES( @NombreProducto, @Precio, @Cantidad, @EstadoProducto, @IdLaboratorio, @IdProveedor, @IdCategoria, @IdUsos)ENDEXEC InsertarUnProducto 'Panadol Ultra',10,8,1,1,1,1,1------------------------------------------------------------ACTUALIZAR------------------------------------------------------------CREATE PROCEDURE ActualizarUnProducto@IDProducto Int,@NombreProducto Nchar(30),@Precio float,@Cantidad Int,@EstadoProducto Int,@IdLaboratorio int,@IdProveedor Int,@IdCategoria Int,@IdUsos IntASSET NOCOUNT ON;BEGINUPDATE ProductosSET NombreProducto = @NombreProducto,        Precio = @Precio,		CantidadProducto = @Cantidad,		EstadoProducto = @EstadoProducto,		FKIdLaboratorio = @IdLaboratorio,		FkIdProveedor = @IdProveedor,		FKIdCategoria = @IdCategoria,		FKIdUsos = @IdUsosWHERE IDProducto = @IDProductoENDEXEC ActualizarUnProducto 3,'Panadol Extra Fuerte',8,3,1,1,1,1,1------------------------------------------------------------ELIMINAR------------------------------------------------------------CREATE PROCEDURE EliminarUnProducto@IDProducto IntASSET NOCOUNT ON;BEGINDELETE FROM ProductosWHERE IDProducto = @IDProductoENDEXEC EliminarUnProducto 2SELECT*FROM Productos------------------------------------------------PROCEDIMIENTOS ALMACENADOS PARA CATEGORIA PRODUCTO--------------------------------------------------------------------------------------------------------------------------------BUSCAR POR NOMBRE---------------------------------------------------------

CREATE PROCEDURE ConsultaCategoriaProductoPorNombre@NombreCatProducto Varchar(30)ASSET NOCOUNT ON;SELECT [IdCategoriaProducto] 'ID' ,[NombreCategoria] 'Nombre' FROM CategoriaProductoWHERE NombreCategoria LIKE CONCAT (@NombreCatProducto, '%%');EXEC ConsultaCategoriaProductoPorNombre 's'----------------------------------------------------------------------------BUSCAR POR ID------------------------------------------------------------------

CREATE PROCEDURE ConsultaCategoriaProductoPorID@IDCategoriaProducto IntASSET NOCOUNT ON;SELECT [IdCategoriaProducto] 'ID' ,[NombreCategoria] 'Nombre' FROM CategoriaProductoWHERE IdCategoriaProducto = @IDCategoriaProductoEXEC ConsultaCategoriaProductoPorID 1----------------------------------------------------------------------------BUSCAR POR NULL------------------------------------------------------------------

CREATE PROCEDURE ConsultaCategoriaProductoVacioASSET NOCOUNT ON;SELECT [IdCategoriaProducto] 'ID' ,[NombreCategoria] 'Nombre' FROM CategoriaProductoEXEC ConsultaCategoriaProductoVacio --------------------------------------------------CRUD PARA CATEGORIA PRODUCTOS -------------------------------------------------------------------------------------------------------INSERTAR------------------------------------------------------------CREATE PROCEDURE InsertarCategoriaProducto@NombreCategoria Varchar(30),@EstadoCategoria IntASSET NOCOUNT ON;BEGININSERT INTO CategoriaProducto VALUES(@NombreCategoria, @EstadoCategoria)ENDEXEC InsertarCategoriaProducto'Cuidado Bucal', 1------------------------------------------------------------ACTUALIZAR------------------------------------------------------------CREATE PROCEDURE ActualizarCategoriaProducto@IdCategoria Int,@NombreCategoria Varchar(30),@EstadoCategoria IntASSET NOCOUNT ON;BEGINUPDATE CategoriaProductoSET NombreCategoria = @NombreCategoria,        EstadoCategoria = @EstadoCategoriaWHERE IdCategoriaProducto = @IdCategoriaENDEXEC ActualizarCategoriaProducto 3,'Cuidado Corporal', 1------------------------------------------------------------ELIMINAR------------------------------------------------------------CREATE PROCEDURE EliminarCategoriaProducto@IdCategoria IntASSET NOCOUNT ON;BEGINDELETE FROM CategoriaProductoWHERE IdCategoriaProducto = @IdCategoriaENDEXEC EliminarCategoriaProducto 3------------------------------------------------PROCEDIMIENTOS ALMACENADOS PARA LABORATORIO--------------------------------------------------------------------------------------------------------------------------------BUSCAR POR NOMBRE---------------------------------------------------------

CREATE PROCEDURE ConsultaLaboratorioPorNombre@NombreLab Varchar(30)ASSET NOCOUNT ON;SELECT [IdLaboratorio] 'ID' , [NombreLaboratorio] 'Nombre' FROM LabororiosWHERE NombreLaboratorio  LIKE CONCAT (@NombreLab, '%%');EXEC ConsultaLaboratorioPorNombre 'd'--------------------------------------------------------------------------------BUSCAR POR ID---------------------------------------------------------

CREATE PROCEDURE ConsultaLaboratorioPorID@IDLaboratorio IntASSET NOCOUNT ON;SELECT [IdLaboratorio] 'ID' , [NombreLaboratorio] 'Nombre' FROM LabororiosWHERE IdLaboratorio = @IDLaboratorioEXEC ConsultaLaboratorioPorID 1--------------------------------------------------------------------------------BUSCAR POR NULL---------------------------------------------------------

CREATE PROCEDURE ConsultaLaboratorioVacioASSET NOCOUNT ON;SELECT [IdLaboratorio] 'ID' , [NombreLaboratorio] 'Nombre' FROM LabororiosEXEC ConsultaLaboratorioVacio--------------------------------------------------CRUD PARA LABORATORIOS -------------------------------------------------------------------------------------------------------INSERTAR------------------------------------------------------------CREATE PROCEDURE InsertarLaboratorio@NombreLab Varchar(30),@EstadoLab intASSET NOCOUNT ON;BEGININSERT INTO Labororios VALUES(@NombreLab, @EstadoLab)ENDEXEC InsertarLaboratorio 'Fundafarma' , 1------------------------------------------------------------ACTUALIZAR------------------------------------------------------------CREATE PROCEDURE ActualizarLaboratorio@IdLaboratorio Int,@NombreLab Varchar(30),@EstadoLab intASSET NOCOUNT ON;BEGINUPDATE LabororiosSET  NombreLaboratorio = @NombreLab,         EstadoLaboratorio = @EstadoLabWHERE IdLaboratorio = @IdLaboratorioENDEXEC ActualizarLaboratorio 2,'FundaFarm',0------------------------------------------------------------ELIMINAR------------------------------------------------------------CREATE PROCEDURE EliminarLaboratorio@IDLaboratorio IntASSET NOCOUNT ON;BEGINDELETE FROM LabororiosWHERE IdLaboratorio = @IDLaboratorioENDEXEC EliminarLaboratorio 2------------------------------------------------PROCEDIMIENTOS ALMACENADOS PARA COMPRAS--------------------------------------------------------------------------------------------------------------------------------BUSCAR POR NOMBRE---------------------------------------------------------

CREATE PROCEDURE ConsultaComprasPorOrden@OrdenCompra IntASSET NOCOUNT ON;SELECT [IdCompra] 'ID' ,[OrdenCompra]'Orden de Compra', [FKIdProveedor] 'Id Proveedor',[FechaCompra]'Fecha de Compra' FROM Compras CINNER JOIN Proveedores PON C.FKIdProveedor = P.PKIdProveedorWHERE  OrdenCompra = @OrdenCompraEXEC ConsultaComprasPorOrden 1234------------------------------------------------PROCEDIMIENTOS ALMACENADOS PARA LABORATORIO--------------------------------------------------------------------------------------------------------------------------------BUSCAR POR ID---------------------------------------------------------

CREATE PROCEDURE ConsultaComprasPorID@IDCompra IntASSET NOCOUNT ON;SELECT [IdCompra] 'ID' ,[OrdenCompra]'Orden de Compra', [FKIdProveedor] 'Id Proveedor',[FechaCompra]'Fecha de Compra' FROM Compras CINNER JOIN Proveedores PON C.FKIdProveedor = P.PKIdProveedorWHERE  IdCompra = @IDCompraEXEC ConsultaComprasPorID 1--------------------------------------------------------------------------------BUSCAR POR NULL---------------------------------------------------------

CREATE PROCEDURE ConsultaComprasVacioASSET NOCOUNT ON;SELECT [IdCompra] 'ID' ,[OrdenCompra]'Orden de Compra', [FKIdProveedor] 'Id Proveedor',[FechaCompra]'Fecha de Compra' FROM Compras CINNER JOIN Proveedores PON C.FKIdProveedor = P.PKIdProveedorEXEC ConsultaComprasVacio --------------------------------------------------CRUD PARA COMPRAS -------------------------------------------------------------------------------------------------------INSERTAR------------------------------------------------------------CREATE PROCEDURE InsertarCompras@OrdenCompra Int,@IdProveedor Int,@FechaCompra DateASSET NOCOUNT ON;BEGININSERT INTO Compras VALUES(@OrdenCompra, @IdProveedor, @FechaCompra)ENDEXEC InsertarCompras 4321,1,'2022/06/03'------------------------------------------------------------ACTUALIZAR------------------------------------------------------------CREATE PROCEDURE ActualizarCompras@IDCompra Int,@OrdenCompra Int,@IdProveedor Int,@FechaCompra DateASSET NOCOUNT ON;BEGINUPDATE ComprasSET OrdenCompra =@OrdenCompra,        FKIdProveedor = @IdProveedor,		FechaCompra = @FechaCompraWHERE IdCompra = @IDCompraENDEXEC ActualizarCompras 1, 1234,1,'2022/05/02'------------------------------------------------------------ELIMINAR------------------------------------------------------------CREATE PROCEDURE EliminarCompras@IDcompra IntASSET NOCOUNT ON;BEGINDELETE FROM ComprasWHERE IdCompra = @IDcompraENDEXEC EliminarCompras 2SELECT * FROM ProductosSELECT*FROM LabororiosSELECT*FROM ComprasSELECT*FROM CategoriaProducto WHERE NombreCliente LIKE CONCAT (@Nombre, '%%');